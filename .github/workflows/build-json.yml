name: build-json

on:
  workflow_dispatch:
    inputs:
        git-ref:
            description: Git Ref to build (Optional)
            required: false
        version:
            description: Package Version (e.g. 46.0.0 or 46.0.0-BETA2 )
            required: true
        cldr-repo:
            description: CLDR (tool) repo to use
            required: true
            default: 'unicode-org/cldr'
        cldr-ref:
            description: 'CLDR (tool) ref/tag/branch to use'
            required: true
            default: 'main'
        data-repo:
            description: Data (staging) repo to use
            required: true
            default: 'unicode-org/cldr-staging'
        data-ref:
            description: 'Data (staging) ref/tag/branch to use'
            required: true
            default: 'main'
        data-dir:
            description: 'Path in Data repo'
            required: true
            default: 'production/'

jobs:
    build:
        name: Build cldr-json
        runs-on: ubuntu-latest
        steps:
            - name: Set up JDK
              uses: actions/setup-java@v5
              with:
                java-version: 11
                distribution: 'temurin'
            - name: Clone json
              uses: actions/checkout@v5
              with:
                ref: ${{ github.event.inputs.git-ref }}
                path: cldr-json
            - name: Clone CLDR
              uses: actions/checkout@v5
              with:
                ref: ${{ github.event.inputs.cldr-ref }}
                lfs: false
                repository: ${{ github.event.inputs.cldr-repo }}
                path: cldr
            - name: Cache local Maven repository
              uses: actions/cache@v4
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('cldr/tools/**/pom.xml') }}
                  restore-keys: |
                      ${{ runner.os }}-maven-
            - name: Clone Data
              uses: actions/checkout@v5
              with:
                ref: ${{ github.event.inputs.data-ref }}
                repository: ${{ github.event.inputs.data-repo }}
                sparse-checkout: ${{ github.event.inputs.data-dir }}
                path: cldr-staging
            - name: Setup Config
              run: |
                cd cldr-json
                echo VERSION=${{ github.event.inputs.version }} > local-config.sh
                echo CLDR_DIR=../cldr >> local-config.sh
                echo INDATA=../cldr-staging/${{ github.event.inputs.data-dir }} >> local-config.sh
                cat local-config.sh
                chmod a+rx local-config.sh
                bash cldr-identify.sh | tee ../cldr-identity.txt
            - name: Upload cldr-identity.txt
              uses: actions/upload-artifact@v4
              with:
                  name: cldr-identity
                  path: ./cldr-identity.txt
            - name: Build JSON
              run: |
                cd cldr-json
                echo "::group::Cleanup"
                rm -rf cldr-json
                echo "::endgroup::"
                echo "::group::Build"
                env MVN_OPTS="-s ../cldr/.github/workflows/mvn-settings.xml" bash ./cldr-generate-json.sh
                echo "::endgroup::"
                echo "::group::Status"
                git status || true
                echo "::endgroup::"
                echo "::group::Zip"
                bash cldr-generate-zip.sh
                cp PACKAGES.md dist/
                echo "::endgroup::"
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload dist
              uses: actions/upload-artifact@v4
              with:
                name: cldr-json
                path: ./cldr-json/dist



